# File: postgresdb-helm-chart/templates/persistent-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: {{ .Values.namespace }}
  name: postgresdb-persistent-volume
  labels:
    type: local
    app: postgresdb
spec:
  storageClassName: {{ .Values.storageClass }}
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/data/db"

---

# File: postgresdb-helm-chart/templates/persistent-volume-claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{ .Values.namespace }}
  name: db-persistent-volume-claim
spec:
  storageClassName: {{ .Values.storageClass }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi

---

# File: postgresdb-helm-chart/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Values.namespace }}
  name: db-secret-credentials
  labels:
    app: postgresdb
data:
  POSTGRES_DB: {{ .Values.dbName | b64enc | quote }}
  POSTGRES_USER: {{ .Values.dbUser | b64enc | quote }}
  POSTGRES_PASSWORD: {{ .Values.dbPassword | b64enc | quote }}

---

# File: postgresdb-helm-chart/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.namespace }}
  name: postgresdb
spec:
  serviceName: postgresdb
  selector:
    matchLabels:
      app: postgresdb
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: postgresdb
    spec:
      containers:
        - name: postgresdb
          image: {{ .Values.image }}
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: db-secret-credentials
          volumeMounts:
            - mountPath: /data/db
              name: db-data
  volumeClaimTemplates:
    - metadata:
        name: db-data
      spec:
        storageClassName: {{ .Values.storageClass }}
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 4Gi

---

# File: postgresdb-helm-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: postgresdb
  labels:
    app: postgresdb
spec:
  selector:
    app: postgresdb
  type: LoadBalancer
  ports:
    - port: 5432
      targetPort: 5432
